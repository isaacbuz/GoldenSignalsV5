"""Add user authentication system and signal relationships

Revision ID: 79889599fb59
Revises: f73c17986ab5
Create Date: 2025-08-06 12:30:11.083310

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '79889599fb59'
down_revision = 'f73c17986ab5'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agents',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('agent_type', sa.String(length=50), nullable=False),
    sa.Column('version', sa.String(length=20), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('parameters', sa.JSON(), nullable=True),
    sa.Column('total_signals', sa.Integer(), nullable=False),
    sa.Column('correct_signals', sa.Integer(), nullable=False),
    sa.Column('accuracy', sa.Float(), nullable=False),
    sa.Column('total_pnl', sa.Float(), nullable=False),
    sa.Column('avg_pnl_per_signal', sa.Float(), nullable=False),
    sa.Column('win_rate', sa.Float(), nullable=False),
    sa.Column('max_drawdown', sa.Float(), nullable=False),
    sa.Column('sharpe_ratio', sa.Float(), nullable=True),
    sa.Column('sortino_ratio', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_signal_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('signals_today', sa.Integer(), nullable=False),
    sa.Column('consensus_weight', sa.Float(), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=False),
    sa.Column('performance_history', sa.JSON(), nullable=True),
    sa.Column('recent_accuracy', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agents_agent_type'), 'agents', ['agent_type'], unique=False)
    op.create_index(op.f('ix_agents_id'), 'agents', ['id'], unique=True)
    op.create_index(op.f('ix_agents_name'), 'agents', ['name'], unique=True)
    op.create_table('market_snapshots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('sp500', sa.Float(), nullable=True),
    sa.Column('nasdaq', sa.Float(), nullable=True),
    sa.Column('dow', sa.Float(), nullable=True),
    sa.Column('vix', sa.Float(), nullable=True),
    sa.Column('advances', sa.Integer(), nullable=True),
    sa.Column('declines', sa.Integer(), nullable=True),
    sa.Column('unchanged', sa.Integer(), nullable=True),
    sa.Column('total_volume', sa.Float(), nullable=True),
    sa.Column('fear_greed_index', sa.Float(), nullable=True),
    sa.Column('put_call_ratio', sa.Float(), nullable=True),
    sa.Column('additional_data', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_market_snapshots_id'), 'market_snapshots', ['id'], unique=False)
    op.create_index(op.f('ix_market_snapshots_timestamp'), 'market_snapshots', ['timestamp'], unique=False)
    op.create_table('portfolios',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('portfolio_type', sa.String(length=20), nullable=False),
    sa.Column('initial_balance', sa.Float(), nullable=False),
    sa.Column('current_balance', sa.Float(), nullable=False),
    sa.Column('total_value', sa.Float(), nullable=False),
    sa.Column('total_pnl', sa.Float(), nullable=False),
    sa.Column('total_pnl_percentage', sa.Float(), nullable=False),
    sa.Column('daily_pnl', sa.Float(), nullable=False),
    sa.Column('max_drawdown', sa.Float(), nullable=False),
    sa.Column('max_drawdown_percentage', sa.Float(), nullable=False),
    sa.Column('volatility', sa.Float(), nullable=True),
    sa.Column('sharpe_ratio', sa.Float(), nullable=True),
    sa.Column('total_trades', sa.Integer(), nullable=False),
    sa.Column('winning_trades', sa.Integer(), nullable=False),
    sa.Column('losing_trades', sa.Integer(), nullable=False),
    sa.Column('win_rate', sa.Float(), nullable=False),
    sa.Column('max_positions', sa.Integer(), nullable=False),
    sa.Column('current_positions', sa.Integer(), nullable=False),
    sa.Column('position_sizing', sa.String(length=20), nullable=False),
    sa.Column('max_risk_per_trade', sa.Float(), nullable=False),
    sa.Column('max_portfolio_risk', sa.Float(), nullable=False),
    sa.Column('stop_loss_percentage', sa.Float(), nullable=False),
    sa.Column('auto_execute', sa.Boolean(), nullable=False),
    sa.Column('follow_signals', sa.Boolean(), nullable=False),
    sa.Column('risk_management_enabled', sa.Boolean(), nullable=False),
    sa.Column('positions', sa.JSON(), nullable=True),
    sa.Column('trade_history', sa.JSON(), nullable=True),
    sa.Column('performance_history', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_trade_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_portfolios_id'), 'portfolios', ['id'], unique=True)
    op.create_table('price_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.Float(), nullable=False),
    sa.Column('vwap', sa.Float(), nullable=True),
    sa.Column('trades_count', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_symbol_timestamp', 'price_data', ['symbol', 'timestamp'], unique=False)
    op.create_index(op.f('ix_price_data_id'), 'price_data', ['id'], unique=False)
    op.create_index(op.f('ix_price_data_symbol'), 'price_data', ['symbol'], unique=False)
    op.create_index(op.f('ix_price_data_timestamp'), 'price_data', ['timestamp'], unique=False)
    op.create_table('stocks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('sector', sa.String(), nullable=True),
    sa.Column('industry', sa.String(), nullable=True),
    sa.Column('market_cap', sa.Float(), nullable=True),
    sa.Column('exchange', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stocks_id'), 'stocks', ['id'], unique=False)
    op.create_index(op.f('ix_stocks_symbol'), 'stocks', ['symbol'], unique=True)
    op.create_table('technical_indicators',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('sma_20', sa.Float(), nullable=True),
    sa.Column('sma_50', sa.Float(), nullable=True),
    sa.Column('sma_200', sa.Float(), nullable=True),
    sa.Column('ema_12', sa.Float(), nullable=True),
    sa.Column('ema_26', sa.Float(), nullable=True),
    sa.Column('rsi', sa.Float(), nullable=True),
    sa.Column('macd', sa.Float(), nullable=True),
    sa.Column('macd_signal', sa.Float(), nullable=True),
    sa.Column('macd_histogram', sa.Float(), nullable=True),
    sa.Column('bb_upper', sa.Float(), nullable=True),
    sa.Column('bb_middle', sa.Float(), nullable=True),
    sa.Column('bb_lower', sa.Float(), nullable=True),
    sa.Column('atr', sa.Float(), nullable=True),
    sa.Column('obv', sa.Float(), nullable=True),
    sa.Column('volume_sma', sa.Float(), nullable=True),
    sa.Column('additional_indicators', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_indicators_symbol_timestamp', 'technical_indicators', ['symbol', 'timestamp'], unique=False)
    op.create_index(op.f('ix_technical_indicators_id'), 'technical_indicators', ['id'], unique=False)
    op.create_index(op.f('ix_technical_indicators_symbol'), 'technical_indicators', ['symbol'], unique=False)
    op.create_index(op.f('ix_technical_indicators_timestamp'), 'technical_indicators', ['timestamp'], unique=False)
    op.create_table('trading_signals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('signal_type', sa.Enum('BUY', 'SELL', 'HOLD', 'STRONG_BUY', 'STRONG_SELL', name='signaltype'), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('entry_price', sa.Float(), nullable=True),
    sa.Column('target_price', sa.Float(), nullable=True),
    sa.Column('stop_loss', sa.Float(), nullable=True),
    sa.Column('source_agent', sa.String(), nullable=True),
    sa.Column('reasoning', sa.JSON(), nullable=True),
    sa.Column('technical_indicators', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('actual_entry', sa.Float(), nullable=True),
    sa.Column('actual_exit', sa.Float(), nullable=True),
    sa.Column('profit_loss', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_trading_signals_id'), 'trading_signals', ['id'], unique=False)
    op.create_index(op.f('ix_trading_signals_symbol'), 'trading_signals', ['symbol'], unique=False)
    op.create_index(op.f('ix_trading_signals_timestamp'), 'trading_signals', ['timestamp'], unique=False)
    op.create_table('users',
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('account_balance', sa.Float(), nullable=True),
    sa.Column('total_profit_loss', sa.Float(), nullable=True),
    sa.Column('win_rate', sa.Float(), nullable=True),
    sa.Column('total_trades', sa.Integer(), nullable=True),
    sa.Column('successful_trades', sa.Integer(), nullable=True),
    sa.Column('risk_tolerance', sa.String(length=20), nullable=True),
    sa.Column('preferred_timeframe', sa.String(length=20), nullable=True),
    sa.Column('profile_image_url', sa.String(length=500), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('notification_preferences', sa.String(length=100), nullable=True),
    sa.Column('api_key', sa.String(length=128), nullable=True),
    sa.Column('api_secret', sa.String(length=128), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=True),
    sa.Column('account_locked_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_api_key'), 'users', ['api_key'], unique=True)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('positions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('OPEN', 'CLOSED', 'PARTIALLY_CLOSED', name='positionstatus'), nullable=True),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('entry_price', sa.Float(), nullable=False),
    sa.Column('current_price', sa.Float(), nullable=True),
    sa.Column('stop_loss', sa.Float(), nullable=True),
    sa.Column('take_profit', sa.Float(), nullable=True),
    sa.Column('trailing_stop_distance', sa.Float(), nullable=True),
    sa.Column('opened_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('closed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('unrealized_pnl', sa.Float(), nullable=True),
    sa.Column('realized_pnl', sa.Float(), nullable=True),
    sa.Column('signal_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['signal_id'], ['trading_signals.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_positions_id'), 'positions', ['id'], unique=False)
    op.create_index(op.f('ix_positions_symbol'), 'positions', ['symbol'], unique=False)
    op.create_index(op.f('ix_positions_user_id'), 'positions', ['user_id'], unique=False)
    op.create_table('signals',
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('action', sa.Enum('BUY', 'SELL', 'HOLD', name='signalaction'), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('target_price', sa.Float(), nullable=True),
    sa.Column('stop_loss', sa.Float(), nullable=True),
    sa.Column('take_profit', sa.Float(), nullable=True),
    sa.Column('risk_level', sa.Enum('LOW', 'MEDIUM', 'HIGH', name='risklevel'), nullable=False),
    sa.Column('timeframe', sa.String(length=20), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('indicators', sa.JSON(), nullable=True),
    sa.Column('reasoning', sa.Text(), nullable=False),
    sa.Column('consensus_strength', sa.Float(), nullable=False),
    sa.Column('agents_consensus', sa.JSON(), nullable=True),
    sa.Column('signal_source', sa.String(length=50), nullable=False),
    sa.Column('market_regime', sa.String(length=20), nullable=True),
    sa.Column('volatility_score', sa.Float(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'EXECUTED', 'EXPIRED', 'CANCELLED', name='signalstatus'), nullable=False),
    sa.Column('execution_price', sa.Float(), nullable=True),
    sa.Column('executed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('pnl', sa.Float(), nullable=False),
    sa.Column('pnl_percentage', sa.Float(), nullable=False),
    sa.Column('max_drawdown', sa.Float(), nullable=True),
    sa.Column('max_profit', sa.Float(), nullable=True),
    sa.Column('views', sa.Integer(), nullable=False),
    sa.Column('likes', sa.Integer(), nullable=False),
    sa.Column('shares', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_signals_action'), 'signals', ['action'], unique=False)
    op.create_index(op.f('ix_signals_id'), 'signals', ['id'], unique=True)
    op.create_index(op.f('ix_signals_risk_level'), 'signals', ['risk_level'], unique=False)
    op.create_index(op.f('ix_signals_status'), 'signals', ['status'], unique=False)
    op.create_index(op.f('ix_signals_symbol'), 'signals', ['symbol'], unique=False)
    op.create_index(op.f('ix_signals_user_id'), 'signals', ['user_id'], unique=False)
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('position_id', sa.Integer(), nullable=True),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('order_type', sa.String(), nullable=False),
    sa.Column('side', sa.String(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('limit_price', sa.Float(), nullable=True),
    sa.Column('stop_price', sa.Float(), nullable=True),
    sa.Column('executed_price', sa.Float(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'FILLED', 'PARTIALLY_FILLED', 'CANCELLED', 'REJECTED', name='orderstatus'), nullable=True),
    sa.Column('filled_quantity', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('executed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('broker_order_id', sa.String(), nullable=True),
    sa.Column('signal_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['position_id'], ['positions.id'], ),
    sa.ForeignKeyConstraint(['signal_id'], ['trading_signals.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_orders_id'), 'orders', ['id'], unique=False)
    op.create_index(op.f('ix_orders_symbol'), 'orders', ['symbol'], unique=False)
    op.create_index(op.f('ix_orders_user_id'), 'orders', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_orders_user_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_symbol'), table_name='orders')
    op.drop_index(op.f('ix_orders_id'), table_name='orders')
    op.drop_table('orders')
    op.drop_index(op.f('ix_signals_user_id'), table_name='signals')
    op.drop_index(op.f('ix_signals_symbol'), table_name='signals')
    op.drop_index(op.f('ix_signals_status'), table_name='signals')
    op.drop_index(op.f('ix_signals_risk_level'), table_name='signals')
    op.drop_index(op.f('ix_signals_id'), table_name='signals')
    op.drop_index(op.f('ix_signals_action'), table_name='signals')
    op.drop_table('signals')
    op.drop_index(op.f('ix_positions_user_id'), table_name='positions')
    op.drop_index(op.f('ix_positions_symbol'), table_name='positions')
    op.drop_index(op.f('ix_positions_id'), table_name='positions')
    op.drop_table('positions')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_api_key'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_trading_signals_timestamp'), table_name='trading_signals')
    op.drop_index(op.f('ix_trading_signals_symbol'), table_name='trading_signals')
    op.drop_index(op.f('ix_trading_signals_id'), table_name='trading_signals')
    op.drop_table('trading_signals')
    op.drop_index(op.f('ix_technical_indicators_timestamp'), table_name='technical_indicators')
    op.drop_index(op.f('ix_technical_indicators_symbol'), table_name='technical_indicators')
    op.drop_index(op.f('ix_technical_indicators_id'), table_name='technical_indicators')
    op.drop_index('idx_indicators_symbol_timestamp', table_name='technical_indicators')
    op.drop_table('technical_indicators')
    op.drop_index(op.f('ix_stocks_symbol'), table_name='stocks')
    op.drop_index(op.f('ix_stocks_id'), table_name='stocks')
    op.drop_table('stocks')
    op.drop_index(op.f('ix_price_data_timestamp'), table_name='price_data')
    op.drop_index(op.f('ix_price_data_symbol'), table_name='price_data')
    op.drop_index(op.f('ix_price_data_id'), table_name='price_data')
    op.drop_index('idx_symbol_timestamp', table_name='price_data')
    op.drop_table('price_data')
    op.drop_index(op.f('ix_portfolios_id'), table_name='portfolios')
    op.drop_table('portfolios')
    op.drop_index(op.f('ix_market_snapshots_timestamp'), table_name='market_snapshots')
    op.drop_index(op.f('ix_market_snapshots_id'), table_name='market_snapshots')
    op.drop_table('market_snapshots')
    op.drop_index(op.f('ix_agents_name'), table_name='agents')
    op.drop_index(op.f('ix_agents_id'), table_name='agents')
    op.drop_index(op.f('ix_agents_agent_type'), table_name='agents')
    op.drop_table('agents')
    # ### end Alembic commands ###